# coding:utf-8

import xlwt
import datetime


#################################
# Parameter Settings #
output_detailed_filename = 'output_detailed.txt' # the file (detailed report) generated by search.py
output_brief_filename = 'output_brief.txt' # the brief report file to be generated
timestr=datetime.datetime.now().strftime('%Y%m%d_%H%M%S')  
output_brief_xls_filename = 'output_brief_'+timestr+'.xls' # the brief report xls-file to be generated
# End Parameter Settings #
#################################



def detailed2brief_txt(in_file, out_file):
    file_rd = open(in_file)
    all_the_text = file_rd.read()
    file_rd.close()

    records = all_the_text.split('\n\n')[:-1]
    str_to_write = '#\tHighly Cited\tTitle\tTime\tWOS Citation\tSCI Citation\tBy others\tBy self\n'
    rec_sum = [0]*5
    i = 1
    for rec in records:
        lines = rec.splitlines()
        title = lines[1]
        title = title[title.index(': ') + 2:]
        time = lines[3]
        time = time.split('  ')[-2]
        time = time[time.index(': ') + 2:]
        for line_i in range(len(lines)):
            if lines[line_i].startswith('WOS Citation:'):
                break
        citation = lines[line_i].split('   ')
        if len(citation) == 1:
            citation = '0\t0\t0\t0'
        else:
            wos_c = citation[0]
            wos_c = wos_c[wos_c.index(': ') + 2:]
            rec_sum[1] += int(wos_c)
            sci = citation[1]
            if sci.find('(') == -1:
                SCI_str = sci[sci.index('SCI Citation: ')+14:]
                By_others_str = '0'
                self_str = '0'
            else:
                SCI_str = sci[sci.index('SCI Citation: ')+14:sci.index(' (')]
                By_others_str = sci[sci.index('By others: ') + 11:sci.index(', ')]
                self_str = sci[sci.index('self: ') + 6:sci.index(')')]
            sci_c = SCI_str + '\t'
            sci_c += By_others_str + '\t'
            sci_c += self_str
            rec_sum[2] += int(SCI_str)
            rec_sum[3] += int(By_others_str)
            rec_sum[4] += int(self_str)
            citation = wos_c + '\t' + sci_c
        if line_i+1<len(lines) and lines[line_i+1].startswith('*** Highly Cited Paper ***'):
            h_cited = '*'
            rec_sum[0] += 1
        else:
            h_cited = ''
        str_to_write += str(i) + '\t' + h_cited + '\t' + title + '\t' + time + '\t' + citation + '\n'
        i += 1
    str_to_write += '\nSUM\t' + str(rec_sum[0]) + '\t\t\t' + str(rec_sum[1]) + '\t' + str(rec_sum[2]) + '\t' + str(rec_sum[3]) + '\t' + str(rec_sum[4])
    file_wr = open(out_file, 'w')
    file_wr.write(str_to_write)
    file_wr.close()


def txt2xls(in_file, out_file):
    f = open(in_file)
    wb = xlwt.Workbook() #encoding='utf-8'
    ws1 = wb.add_sheet("Sheet1")

    i = 0
    for line in f.readlines():
        j = 0
        for item in line.split('\t'):
            try:
                item = item.strip().decode('gbk')
            except UnicodeDecodeError:
                print 'UnicodeDecodeError: ', i, j, item
                ws1.write(i, j, "NULL")
            else:
                ws1.write(i, j, item)
            j += 1
        i += 1
    f.close()
    wb.save(out_file)


def main():
    detailed2brief_txt(output_detailed_filename, output_brief_filename)
    txt2xls(output_brief_filename, output_brief_xls_filename)


if __name__ == "__main__":
    main()
